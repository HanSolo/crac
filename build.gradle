plugins {
    id("io.micronaut.application") version "3.7.8"
    id("io.micronaut.docker") version "3.7.8"
    id("io.micronaut.crac") version "3.7.8"
    id("com.github.johnrengelman.shadow") version "7.1.2"
}

version = "0.1"
group = "eu.hansolo.micronaut"

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"
    annotationProcessor("io.micronaut:micronaut-http-validation")
    implementation("io.micronaut:micronaut-inject")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut.crac:micronaut-crac")
    implementation("jakarta.annotation:jakarta.annotation-api")
    runtimeOnly("io.micronaut:micronaut-core")
    runtimeOnly("ch.qos.logback:logback-classic")
    implementation("io.micronaut:micronaut-validation")

    implementation 'com.google.code.gson:gson:2.10.1'
}


application {
    mainClass.set("eu.hansolo.micronaut.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("eu.hansolo.micronaut.*")
    }
    crac {
        enabled                     = true
        baseImage                   = "ubuntu:22.04"
        platform                    = "linux/amd64"
        preCheckpointReadinessCheck = "curl --output /dev/null --silent --head http://localhost:8080"
        network                     = "my-docker-network"
        warmupScript                = "customWarmupScript.sh"
    }
}



